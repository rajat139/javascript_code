JavaScript Execution Context 

{JS code} - Global execution context - this 
	-Global execution context
	-Function execution context
	-Eval execution context
{JS code} - Memory Creation Phase (Creation Phase): (all variables will be 
                                    collected and keep in itself)
	  - Execution Phase
      
		example -
			let val1 = 10
			let val2 = 5
			function addNum(num1, num2){
				let total = num1 + num2
				return total
			}
			let result1 = addNum(val1, val2)
			let result2 = addNum(10, 2)
		1 - Global Execution
			this (code will be allocated to this)
		2 - Memory Phase
			val1 - undefined
			val2 - undefined
			addNum - definition
			result1 - undefined
			result2 - undefined
		3 - Execution Phase
			val1 - 10
			val2 - 5
			addNum - (new variable environment + Execution thread)
					Memory Phase
						val1 - undefined
						val2 - undefined
						total - undefined
					Execution Context
						num1 - 10
						num2 - 5
						total - 15 	(returns to Global Execution)
			Delete 
			addNum - (new variable environment + Execution thread)
					Memory Phase
						val1 - undefined
						val2 - undefined
						total - undefined
					Execution Context
						num1 - 10
						num2 - 2
						total - 12 	(returns to Global Execution)
			Delete 

